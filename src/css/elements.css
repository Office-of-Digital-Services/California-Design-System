/*
 * Universal
 */

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
}

/*
 * Document
 */

body {
  background-color: var(--primary-background-10);
  color: var(--primary-120);
  position: relative;
  min-height: 100vh;
}

/*
 * Content
 *
 * Many content rules are in typography.css.
 */

blockquote {
  border-inline-start: var(--primary-background-60) .25rem solid;
  margin: 1rem 0;
  padding-inline-start: 1rem;
}

dl {
  display: grid;
  grid-template-columns: 1fr 4fr;
  gap: 1rem;
}

dt {
  font-weight: 600;
}

figure {
  display: flex;
  flex-direction: column;
  gap: .5rem;
  padding: .5rem;
  margin: 1rem 0;
  border: .125rem solid var(--primary-background-40);
  max-width: var(--text-max-width);
}

figcaption {
  font-style: italic;
}

hr {
  border: none;
  border-block-start: .125rem solid var(--primary-accent);
  height: .125rem;
  margin: 1.5rem 0;
  line-height: 1rem;
}

ul,
ol,
menu {
  margin: 1rem 0;
}

/*
 * Inline
 */

a {
  color: var(--link);

  &:focus {
    color: var(--link-active);
  }
}

code {
  background-color: var(--gray-background-60);
  padding: .25rem;
  border-radius: min(.25rem, var(--border-radius)); /* Border radius not to exceed .25rem. */
}

abbr {
  font-weight: 700;
}

del {
  background-color: lightcoral;
}

ins {
  background-color: lightgreen;
}

kbd {
  border: .125rem solid var(--primary-text);
  border-radius: .25rem;
  padding: .25rem;
}

mark {
  background-color: lightyellow;
}

:target {
  scroll-margin-block: 5ex;
}

/*
 * Forms
 */

label {
  display: block;
}

/* Default to display:block for most inputs. */
input:not([type="radio"], [type="checkbox"], [type="color"]),
textarea,
select {
  display: block;
  padding: .5rem;
}

/* Increase width for some inputs. */
input:not([type="submit"], [type="reset"], [type="color"]),
select,
textarea {
  inline-size: 100%;
}

/* No flattened textareas. */
textarea:not([rows]) {
  min-block-size: 20ex;
}

ca-form-field,
.ca-form-field {
  margin-block: 1rem 2rem;
  max-inline-size: var(--text-max-width);

  /* Remove top and bottom margins from first and last children. */
  & > :first-child {
    margin-block-start: 0;
  }
  & > :last-child {
    margin-block-end: 0;
  }

  /* Need to add the [invalid] attribute to trigger this. */
  &:has(*[invalid]) {
    padding: 1rem;
    border: .25rem solid red;
  }

  /* When it's a simple label + input, do a simple vertical flex. */
  /* We need to allow disclaimer/fine-print text below the input too. */
  &:has(textarea, select, input:not([type="radio"], [type="checkbox"])) {
    display: flex;
    flex-direction: column;
    gap: .25rem;
  }

  /* When it's a checkbox or radio button, switch to grid. */
  /* Consider extending this to other scenarios, such as "initial each paragraph" forms. */
  &:has(input:is([type="radio"], [type="checkbox"])) {
    display: grid;
    grid-template-columns: 1rem auto;
    grid-template-rows: auto;
    gap: .25rem 2rem;

    /* All subsequent elements should stay in the second column. */
    & > :nth-child(n + 3) {
      grid-column-start: 2;
    }
  }
}

/* Add some buffer when scrolling back up to an invalid field. */
input:invalid {
  scroll-margin-block: 5ex;
}

fieldset {
  margin-block: 1rem 2rem;
  border: none;
  padding: 0;
}

legend {
  margin-block-end: .25rem;
}

/*
 * Media
 */

img,
picture,
video,
canvas,
svg {
  max-width: 100%;
  display: block;
}

/* Tables */

table {
  border-collapse: collapse;
  border: .25rem solid var(--primary-text);
}

caption {
  caption-side: bottom;
  padding: 1rem 0;
  font-style: italic;
  text-align: left;
}

th,
td {
  border: .125rem solid var(--primary-text);
  padding: 1rem;
}

/* Interactive */
