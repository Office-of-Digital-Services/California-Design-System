ca-box {
  /* Don't switch the classes to display:block. Might disrupt styling of the content. */
  display: block;
}

ca-box {
  max-width: var(--max-width);
}

ca-box,
ca-box[size="medium"] {
  --max-width: var(--content-width-medium); /* Default */
}

ca-box[size="small"] {
  --max-width: var(--content-width-small);
}

ca-box[size="large"] {
  --max-width: var(--content-width-large);
}

ca-box[size="full"] {
  --max-width: var(--content-width-full);
}

ca-box[columns] {
  --columns: 2; /* Default 2 columns */
  --gap: 0rem; /* Default no gap between columns */
  --gap-x: var(--gap);
  --gap-y: var(--gap);

  /* 
		The --shrink-factor helps columns shrink responsively a bit. 
		Otherwise they always break at first pixel below max-width. 
		We'll probably want to adjust this over time, with testing.
	*/
  --shrink-factor: 0.8;

  /* --column-size uses all of our variables to figure out the ideal size for each column. */
  --column-size: calc(
    (
      (var(--max-width) - ((var(--columns) - 1) * var(--gap-x))) /
      var(--columns)
    ) *
    var(--shrink-factor)
  );

  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  column-gap: var(--gap-x);
  row-gap: var(--gap-y);
  container: container / inline-size;

  /* Each column */
  & > * {
    --span: 1; /* Default column span of 1 */

    /* Start with the ideal --column-size, then factor in --span for this particular column. */
    inline-size: min(
      100%,
      calc(
        (var(--column-size) * var(--span)) +
        ((var(--span) - 1) * var(--gap-x))
      )
    );

    /* Larger spanned columns need a larger flex-grow to maintain alignment. */
    flex: var(--span) 1 auto;
  }

  & > :is(ca-column[span="2"], .span-2) {
    --span: 2;
  }
  & > :is(ca-column[span="3"], .span-3) {
    --span: 3;
  }
  & > :is(ca-column[span="4"], .span-4) {
    --span: 4;
  }
  & > :is(ca-column[span="5"], .span-5) {
    --span: 5;
  }

  &[gap="1"] {
    --gap: 0.5rem;
  }
  &[gap="2"] {
    --gap: 1rem;
  }
  &[gap="3"] {
    --gap: 1.5rem;
  }
  &[gap="4"] {
    --gap: 2rem;
  }
  &[gap="5"] {
    --gap: 2.5rem;
  }
  &[gap="6"] {
    --gap: 3rem;
  }

  &[gap-x="0"] {
    --gap-x: 0rem;
  }
  &[gap-x="1"] {
    --gap-x: 0.5rem;
  }
  &[gap-x="2"] {
    --gap-x: 1rem;
  }
  &[gap-x="3"] {
    --gap-x: 1.5rem;
  }
  &[gap-x="4"] {
    --gap-x: 2rem;
  }
  &[gap-x="5"] {
    --gap-x: 2.5rem;
  }
  &[gap-x="6"] {
    --gap-x: 3rem;
  }

  &[gap-y="0"] {
    --gap-y: 0rem;
  }
  &[gap-y="1"] {
    --gap-y: 0.5rem;
  }
  &[gap-y="2"] {
    --gap-y: 1rem;
  }
  &[gap-y="3"] {
    --gap-y: 1.5rem;
  }
  &[gap-y="4"] {
    --gap-y: 2rem;
  }
  &[gap-y="5"] {
    --gap-y: 2.5rem;
  }
  &[gap-y="6"] {
    --gap-y: 3rem;
  }
}

ca-box[columns="2"] {
  --columns: 2; /* Default */
}
ca-box[columns="3"] {
  --columns: 3;
}
ca-box[columns="4"] {
  --columns: 4;
}
ca-box[columns="5"] {
  --columns: 5;
}

ca-column {
  display: block;
}
