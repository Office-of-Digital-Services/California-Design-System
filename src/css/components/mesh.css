ca-mesh {
  /* End-user can override any of these vars. */
  /* Consider adding sm/md/lg shortcut attributes. */
  --cell-width: 22.5rem;
  --min-columns: 1;
  --max-columns: 6;
  --gap-x: 1rem;
  --gap-y: 1rem;
  --flow-style: auto-fit;

  display: grid;
  /* We'll need to teach a whole course to explain this one. */
  grid-template-columns: repeat(
      var(--flow-style),
      minmax(
        min(
          calc(
            (100% - ((var(--max-columns) - 1) * var(--gap-x))) /
            var(--min-columns)
          ),
          max(
            var(--cell-width),
            calc(
              (100% - ((var(--max-columns) - 1) * var(--gap-x))) /
              var(--max-columns)
            )
          )
        ),
        1fr
      )
    );
  grid-template-rows: auto;
  column-gap: var(--gap-x);
  row-gap: var(--gap-y);

  /* Set maximum number of columns on the grid. */
  &[max-columns="2"] {
    --max-columns: 2;
  }
  &[max-columns="3"] {
    --max-columns: 3;
  }
  &[max-columns="4"] {
    --max-columns: 4;
  }
  &[max-columns="5"] {
    --max-columns: 5;
  }
  &[max-columns="6"] {
    --max-columns: 6;
  }
  /* Set minimum number of columns on the grid. */
  &[min-columns="2"] {
    --min-columns: 2;
  }
  &[min-columns="3"] {
    --min-columns: 3;
  }
  &[min-columns="4"] {
    --min-columns: 4;
  }
  &[min-columns="5"] {
    --min-columns: 5;
  }
  &[min-columns="6"] {
    --min-columns: 6;
  }

  /* An example cell size shortcut. */
  &[cell-size="large"] {
    --cell-width: 48ch;
  }

  /* Change the fit/fill style of the grid columns. */
  &[flow="fit"] {
    --flow-style: auto-fit;
  }
  &[flow="fill"] {
    --flow-style: auto-fill;
  }

  &[gap-x="0"],
  &[gap="0"] {
    --gap-x: 0;
  }
  &[gap-x="1"],
  &[gap="1"] {
    --gap-x: 0.5rem;
  }
  &[gap-x="2"],
  &[gap="2"] {
    --gap-x: 1rem;
  }
  &[gap-x="3"],
  &[gap="3"] {
    --gap-x: 1.5rem;
  }
  &[gap-x="4"],
  &[gap="4"] {
    --gap-x: 2rem;
  }
  &[gap-x="5"],
  &[gap="5"] {
    --gap-x: 2.5rem;
  }
  &[gap-x="6"],
  &[gap="6"] {
    --gap-x: 3rem;
  }
  &[gap-x="7"],
  &[gap="7"] {
    --gap-x: 3.5rem;
  }
  &[gap-x="8"],
  &[gap="8"] {
    --gap-x: 4rem;
  }
  &[gap-x="9"],
  &[gap="9"] {
    --gap-x: 4.5rem;
  }
  &[gap-x="10"],
  &[gap="10"] {
    --gap-x: 5rem;
  }
  &[gap-x="12"],
  &[gap="12"] {
    --gap-x: 6rem;
  }
  &[gap-x="14"],
  &[gap="14"] {
    --gap-x: 7rem;
  }
  &[gap-x="16"],
  &[gap="16"] {
    --gap-x: 8rem;
  }
  &[gap-x="18"],
  &[gap="18"] {
    --gap-x: 9rem;
  }
  &[gap-x="20"],
  &[gap="20"] {
    --gap-x: 10rem;
  }

  &[gap-y="0"],
  &[gap="0"] {
    --gap-y: 0;
  }
  &[gap-y="1"],
  &[gap="1"] {
    --gap-y: 0.5rem;
  }
  &[gap-y="2"],
  &[gap="2"] {
    --gap-y: 1rem;
  }
  &[gap-y="3"],
  &[gap="3"] {
    --gap-y: 1.5rem;
  }
  &[gap-y="4"],
  &[gap="4"] {
    --gap-y: 2rem;
  }
  &[gap-y="5"],
  &[gap="5"] {
    --gap-y: 2.5rem;
  }
  &[gap-y="6"],
  &[gap="6"] {
    --gap-y: 3rem;
  }
  &[gap-y="7"],
  &[gap="7"] {
    --gap-y: 3.5rem;
  }
  &[gap-y="8"],
  &[gap="8"] {
    --gap-y: 4rem;
  }
  &[gap-y="9"],
  &[gap="9"] {
    --gap-y: 4.5rem;
  }
  &[gap-y="10"],
  &[gap="10"] {
    --gap-y: 5rem;
  }
  &[gap-y="12"],
  &[gap="12"] {
    --gap-y: 6rem;
  }
  &[gap-y="14"],
  &[gap="14"] {
    --gap-y: 7rem;
  }
  &[gap-y="16"],
  &[gap="16"] {
    --gap-y: 8rem;
  }
  &[gap-y="18"],
  &[gap="18"] {
    --gap-y: 9rem;
  }
  &[gap-y="20"],
  &[gap="20"] {
    --gap-y: 10rem;
  }
}

/* Since the mesh class will be used with lists often, provide some help here. */
.ca-meshify {
  padding: 0;
  list-style-type: none;
  display: contents;

  & > li {
    height: 100%;
    width: 100%;
    margin: 0;
  }
}

:where(ca-mesh) {
  max-width: var(--content-width-full);
}
