/* General CSS rules */
ca-layout {
  position: relative;
  min-block-size: 100vh;
}

/* Layout grid area definitions */
ca-layout {
  /* Required when ca-page-bar is present. */
  & > ca-site-menu {
    grid-area: burger;
  }

  /* Required when the ca-site-menu is present. */
  /* Horizon layout really needs this to work too. */
  & > ca-page-bar {
    grid-area: page-bar;
  }

  & > ca-service-bar {
    grid-area: service-bar;
  }

  /* Optional */
  & > ca-site-logo {
    grid-area: logo;
  }

  /* Required */
  & > header {
    grid-area: header;
  }

  /* Optional */
  & > ca-priority-bar {
    grid-area: priority-bar;
  }

  /* Optional */
  & > ca-utility-bar {
    grid-area: utility-bar;
  }

  /* Required */
  & > main {
    grid-area: main;
  }

  /* Optional */
  & > footer {
    grid-area: footer;
  }

  /* For hiding elements with the dev tool. */
  & > *[hidden] {
    display: none !important;
  }
}

/* 
 * Layout grid shifts 
 */

ca-layout {
  display: grid;
  grid-template-rows: auto;
}

/* Mobile */
/* Apply a mobile-only media query, so these mods don't mess with desktop. */
@media screen and (max-width: 1023px) {
  ca-layout {
    grid-template-columns: 1fr auto;
    grid-template-rows: max-content max-content auto max-content max-content;
    grid-template-areas:
      "burger utility-bar"
      "header header"
      "main main"
      "page-bar page-bar"
      "footer footer";

    /* Since none of the top row items are required on mobile, we can't "fr" any of them, so we need to redefine grid when some are missing. */
    &:has(ca-site-menu[hidden]),
    &:not(:has(ca-site-menu)) {
      grid-template-columns: auto;
      grid-template-areas:
        "utility-bar"
        "header"
        "main"
        "page-bar"
        "footer";
    }
  }
}

/* Default (Eureka), small desktop */
@media screen and (min-width: 1024px) {
  ca-layout:not([format="horizon"]):not([format="skyline"]) {
    grid-template-columns: 15rem 1fr;
    grid-template-rows: fit-content(7rem) max-content max-content max-content 1fr max-content max-content;
    grid-template-areas:
      "logo utility-bar"
      "logo main"
      "header main"
      "priority-bar main"
      "page-bar main"
      "page-bar footer"
      "service-bar footer";

    & > header {
      align-items: start;
    }

    /* When the site-logo is missing, fill the empty grid cells with the header. */
    &:has(ca-site-logo[hidden]),
    &:not(:has(ca-site-logo)) {
      & > header {
        grid-row: 1 / 4;
      }
    }

    /* When the page-bar is missing, add a psuedo element to fill the grid slot. */
    &:has(ca-page-bar[hidden])::before,
    &:not(:has(ca-page-bar))::before {
      content: "";
      block-size: 100%;
      inline-size: 100%;
      display: block;
      background: var(--primary-background-20);
      grid-area: page-bar;
    }

    /* Likewise, when the service-bar is missing, plug the grid with psuedo element. */
    &:has(ca-service-bar[hidden])::after,
    &:not(:has(ca-service-bar))::after {
      content: "";
      block-size: 100%;
      inline-size: 100%;
      display: block;
      background: var(--primary-background-20);
      grid-area: service-bar;
    }
  }
}

/* Horizon, small desktop */
@media screen and (min-width: 1024px) {
  ca-layout[format="horizon"] {
    grid-template-columns: fit-content(7rem) 1fr fit-content(15rem) auto auto;
    grid-template-rows: max-content max-content 1fr max-content;
    grid-template-areas:
      "logo header priority-bar utility-bar utility-bar"
      "logo page-bar page-bar page-bar service-bar"
      "main main main main main"
      "footer footer footer footer footer";

    /* When the page-bar is missing, add a psuedo element to fill the grid slot. */
    &:has(ca-page-bar[hidden]),
    &:not(:has(ca-page-bar)) {
      &::before {
        content: "";
        block-size: 100%;
        inline-size: 100%;
        display: block;
        background: var(--primary-background-20);
        grid-area: page-bar;
      }

      &:has(ca-service-bar[hidden]),
      &:not(:has(ca-service-bar)) {
        &::before {
          grid-column: span 4;
        }
      }
    }

    /* When service-bar is missing, extend the page-bar to fill the space. */
    &:has(ca-service-bar[hidden]),
    &:not(:has(ca-service-bar)) {
      & > ca-page-bar {
        grid-column: span 4;
      }
    }

    /* When the utility-bar is missing, add a psuedo element to fill the grid slot. */
    &:has(ca-utility-bar[hidden]),
    &:not(:has(ca-utility-bar)) {
      &::after {
        content: "";
        block-size: 100%;
        inline-size: 100%;
        display: block;
        background: var(--primary-background-20);
        grid-area: utility-bar;
      }
    }
  }
}

/* Skyline, small desktop */
@media screen and (min-width: 1024px) {
  ca-layout[format="skyline"] {
    grid-template-columns: fit-content(7rem) 1fr auto fit-content(15rem) max-content;
    grid-template-rows: max-content auto max-content;
    grid-template-areas:
      "logo header page-bar priority-bar utility-bar"
      "main main main main main"
      "footer footer footer footer footer";
  }
}

/* Burger menu */
ca-layout[site-menu="open"] {
  & > :is(ca-site-menu, ca-utility-bar, header) {
    position: sticky;
    /* Exact positioning will be inlined by JS. */
    z-index: 1000;
  }

  & > ca-page-bar {
    position: fixed;
    display: block;
    overflow-y: auto;
    height: 100%;
    z-index: 999;
  }

  & > :is(main, footer) {
    filter: blur(.2rem);
  }

  & > :is(main, footer) {
    overflow-x: hidden;
  }
}

@keyframes burger-from-top {
  from {
    opacity: 0;
    transform: translateY(-2rem);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes burger-from-left {
  from {
    opacity: 0;
    transform: translateX(-2rem);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@media screen and (max-width: 1023px) and (
    prefers-reduced-motion: no-preference
  ) {
  ca-layout[site-menu="open"] {
    & :is(ca-site-menu, ca-utility-bar, header) {
      opacity: 0;
      animation: burger-from-top ease-out 0.2s forwards;
    }
    & :is(ca-page-bar) {
      opacity: 0;
      animation: burger-from-left ease-out 0.2s forwards;
    }
  }
}
