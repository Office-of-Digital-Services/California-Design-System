ca-site-menu {
  z-index: 4;
  display: flex;
  align-items: center;
  background-color: var(--primary-background-20);

  & > :is(a, button) {
    all: unset;
    color: var(--primary-100);
    background-color: var(--primary-background-20);
    padding: 0.5rem 1rem;
    cursor: pointer;

    &:hover {
      color: var(--primary-120);
      background-color: var(--primary-background-50);
    }
  }

  & ca-icon {
    block-size: auto;
    inline-size: 2.5rem;
  }

  /* Hide the X symbol in the burger icon. */
  & use[data-close] {
    display: none;
  }
}

/* Fix the burger after user has scrolled down the page. */
ca-site-menu[position="scrolled"] {
  & > :is(a, button) {
    position: fixed;
    block-size: 3rem;
    inline-size: 3rem;
    top: 1rem;
    left: 1rem;
    padding: .5rem;
    background-color: var(--primary-110);
    color: var(--primary-background-10);
    box-shadow: .25rem .25rem .25rem 0px rgba(0, 0, 0, 0.25);

    &:hover {
      color: var(--primary-background-40);
      background-color: var(--primary-120);
    }
  }

  & ca-icon {
    block-size: 100%;
    inline-size: auto;
  }
}

/* Slide the burger menu in from top, after scroll.
@keyframes reveal-scrolled-burger {
  from {
    opacity: 0;
    transform: translateY(-2rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
} */

@keyframes reveal-scrolled-burger {
  0% {
    opacity: 0;
    transform: translateY(-2rem);
  }

  16% {
    opacity: 0.8;
    transform: translateY(0.5rem);
  }

  28% {
    opacity: 1;
    transform: translateY(-0.25rem);
  }

  44% {
    transform: translateY(0.1rem);
  }

  59% {
    transform: translateY(-0.05rem);
  }

  88% {
    transform: translateY(0.005rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Only add animation if user is okay with it. */
@media (prefers-reduced-motion: no-preference) {
  ca-site-menu[position="scrolled"] > :is(a, button) {
    opacity: 0;
    animation: reveal-scrolled-burger ease-out 0.8s forwards;
  }
}

/* Go ahead and display content-nav if JS disabled. */
ca-layout:has(ca-site-menu:not(:defined)) > nav#content-nav {
  display: block;

  /* Without JS, display the nested lists too. */
  & ul ul {
    display: flex;
  }
}

nav#content-nav {
  padding: 1rem;
  z-index: 3;
  background-color: var(--primary-background-20);

  & ul {
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
    row-gap: .5rem;
    list-style-type: none;
  }

  /* Hide nested lists */
  & ul ul {
    display: none;
    margin-inline-start: 1rem;
  }

  & li {
    margin: 0;
  }

  & a {
    box-sizing: border-box;
    display: block;
    font-size: var(--text-size-1);
    padding: .5rem 1rem;
    text-decoration: none;
    color: var(--primary-110);
    border-radius: var(--border-radius);

    &:hover {
      background: linear-gradient(
          180deg,
          rgba(255, 255, 255, 0.0) 62%,
          rgba(0, 97, 141, 0.14) 100%
        ), var(--primary-background-40);
      box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
    }

    /* In-click state */
    &:active {
      background-color: var(--primary-background-50);
      border: 1px solid var(--primary-80);
    }

    /* Defined as "active" link in UI, with class or data attribute. */
    &.active,
    &[data-active] {
      position: relative;
      color: var(--primary-120);
      font-weight: 600;
      background: var(--primary-background-50);
      z-index: 0;

      /* Need this wild mask to combine gradient border with rounded border. */
      &::after {
        content: "";
        position: absolute;
        z-index: -1;
        inset: 0;
        border-radius: var(--border-radius);
        padding: 2px; /* Padding creates the border width. */
        /* Apply the gradient background to the padding-box. */
        background: radial-gradient(
            circle closest-corner at left,
            var(--primary-accent),
            transparent 80%
          )
          padding-box;
        /* Exclude the first layer of the mask (the content-box), from the second layer (everything). */
        /* This mask clips the radial-gradient background above, so we only see the edge of it. */
        mask: linear-gradient(black 0 0) content-box, linear-gradient(black 0 0);
        mask-composite: exclude;
      }

      &:hover {
        box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
      }
    }

    &:focus-visible {
      border: 2px solid var(--primary-10);
      outline: 2px solid var(--primary-120);
    }
  }
}

/* The peeking drawer that slightly pops out when hovering over a nested nav item. */
nav#content-nav > ul > li:has(ul):hover::before {
  content: "";
  z-index: 2;
  position: absolute;
  block-size: 100%;
  inline-size: 1rem;
  inset-block-start: 0;
  inset-inline-start: 15rem;
  background-color: var(--primary-background-30);
  box-shadow: .25rem 0 .25rem 0 rgba(0, 0, 0, 0.05);
}
/* We need to lock the upper shadow in place, so it doesn't dance with the animation. */
nav#content-nav > ul > li:has(ul):hover::after {
  content: "";
  z-index: 3;
  position: absolute;
  block-size: 100%;
  inline-size: .5rem;
  inset-block-start: 0;
  inset-inline-start: 15rem;
  background-color: var(--primary-background-30);
  box-shadow: .25rem 0 .25rem 0 rgba(0, 0, 0, 0.05) inset;
}

@keyframes reveal-subnav-drawer {
  0% {
    opacity: 0;
    transform: translateX(-1rem);
  }

  16% {
    opacity: 1;
    transform: translateX(0.1rem);
  }

  28% {
    transform: translateX(-0.05rem);
  }

  44% {
    transform: translateX(0.001rem);
  }

  59% {
    transform: translateX(-0.0001rem);
  }

  88% {
    transform: translateX(0.00001rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Only add animation if user is okay with it. */
@media (prefers-reduced-motion: no-preference) {
  nav#content-nav > ul > li:has(ul):hover::before {
    opacity: 0;
    animation: reveal-subnav-drawer ease-out 0.8s forwards;
  }
}

/*
nav#content-nav ul ul {
  position: absolute;
  margin: 0;
  top: 0;
  left: 15rem;
  display: flex;
  padding: 3.5rem 1rem 1rem 1rem;
  inline-size: 15rem;
  block-size: 100%;
  z-index: 2;
  background-color: var(--primary-background-30);
  box-shadow: .25rem 0 .25rem 0 rgba(0, 0, 0, 0.05);
}
*/

/* Default (Eureka), small desktop */
@media screen and (min-width: 1024px) {
  /* Hide the burger */
  ca-site-menu {
    display: none;
  }

  /* Show the full nav. */
  nav#content-nav {
    display: block;
  }
}

/* Horizon, small desktop */
@media screen and (min-width: 1024px) {
  ca-layout[format="horizon"] > nav#content-nav {
    padding: 0 1rem 0 0;
    border-block-start: 2px solid;
    border-image-slice: 1;
    border-image-source: linear-gradient(
      to right,
      transparent,
      var(--primary-accent),
      transparent
    );

    & > ul {
      flex-direction: row;
      column-gap: 4rem;
    }

    a {
      padding-block: 1rem;
    }

    a.active,
    a[data-active] {
      margin-block: 0;
    }
  }
}

/* Skyline, small desktop */
@media screen and (min-width: 1024px) {
  ca-layout[format="skyline"] > nav#content-nav {
    display: flex;
    align-items: center;
    padding: 1rem 3rem;

    & > ul {
      flex-direction: row;
      align-items: center;
      column-gap: 4rem;
    }

    a.active,
    a[data-active] {
      margin-block: 0;
    }
  }
}
